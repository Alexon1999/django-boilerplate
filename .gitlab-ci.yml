include: ".ci-templates.yml"

stages:
  - test
  - build-image
  - generate-client
  - publish-client
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .pip-cache/

test:
  stage: test
  extends:
    - .environment-django-ci
  script:
    # if no tests found, convert exit code 5 to 0
    - pytest --cov=. --cov-report html --cov-report term  || [ $? -eq 5 ]
  artifacts:
    paths:
      - htmlcov/

# build and push docker image to registry
build-push-image:
  stage: build-image
  extends:
    - .build-kaniko
  variables:
    IMAGE_NAME: boilerplate/api
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    DOCKERFILE_PATH: "Dockerfile"
    DOCKER_BUILD_ARGS: ""

# deploy to server
deploy:
  stage: deploy
  script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh $SSH_USER@$SSH_HOST "echo 'Deploying to server'"
  only:
    - main
